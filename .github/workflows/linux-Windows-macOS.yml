name: Linux, Windows, macOS

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies for macOS
        run: brew install rhash
        if: matrix.os == 'macos-latest'

      - name: mkdir
        run: mkdir build

      - name: configure on macOS
        working-directory: ./build
        run: cmake -DCMAKE_BUILD_TYPE="Debug" ..
        if: matrix.os == 'macos-latest'

      - name: checkout vcpkg
        uses: actions/checkout@v2
        with:
          repository: "offscale/vcpkg"
          ref: 525983154f9c11294dbc2d28c0029e0b0502e8d4
          path: vcpkg
        if: matrix.os == 'windows-latest' || matrix.os == 'ubuntu-latest'

      - name: "Setup vcpkg (Windows)"
        run: ./vcpkg/bootstrap-vcpkg.bat
        if: matrix.os == 'windows-latest'

      - name: "Setup vcpkg (Ubuntu)"
        run: ./vcpkg/bootstrap-vcpkg.sh
        if: matrix.os == 'ubuntu-latest'

      - name: configure (with vcpkg on Windows)
        working-directory: ./build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE="vcpkg\scripts\buildsystems\vcpkg.cmake" ..
        shell: cmd
        if: matrix.os == 'windows-latest'

      - name: configure (with vcpkg on Linux)
        working-directory: ./build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake" ..
        if: matrix.os == 'ubuntu-latest'

      - name: build
        working-directory: ./build
        run: cmake --build .

      - name: test
        working-directory: ./build
        run: ctest -C Debug .
